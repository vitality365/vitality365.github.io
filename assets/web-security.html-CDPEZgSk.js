import{_ as t,c as a,a as p,o as n}from"./app-D95YKyTd.js";const s={};function r(l,e){return n(),a("div",null,e[0]||(e[0]=[p('<h1 id="web应用安全概述" tabindex="-1"><a class="header-anchor" href="#web应用安全概述"><span>web应用安全概述</span></a></h1><h2 id="常见的攻击方式" tabindex="-1"><a class="header-anchor" href="#常见的攻击方式"><span>常见的攻击方式：</span></a></h2><p>1、破环权限，根据网站登录的漏洞，猜测弱密码，进行密码暴力破解，登录系统，或者绕过登录</p><p>2、SQL注入，通过前台输入的恶意sql数据，达到破坏网站数据库的目的</p><p>3、XSS攻击，通过前台的输入，在网站植入恶意脚本代码，获取其他用户的敏感数据或者执行某些非法操作。</p><p>4、CSRF攻击，冒充A用户在A网站的登录状态，在B网站上，发送执行A网站某敏感动作的请求。达到冒充身份的目的。</p><p>5、信息泄露，通过网站的一些错误处理功能，获取服务器的一些敏感信息。</p><h2 id="核心的安全问题" tabindex="-1"><a class="header-anchor" href="#核心的安全问题"><span>核心的安全问题：</span></a></h2><p>客户端是不安全的，用户可以任意输入提交数据。所以必须认为用户会输入恶意信息。</p><p>1、在客户端的验证可以被绕过（直接发送http请求）。</p><p>2、用户可能发送任何顺序的请求（不按照正确的顺序），或者发送多次相同请求，或者不发送某个请求，任何开发者认为正常的请求顺序都可能会打乱。</p><p>3、客户可能不使用浏览器进行操作，而是模拟浏览器进行大量频繁操作，找到程序的漏洞。</p>',12)]))}const i=t(s,[["render",r],["__file","web-security.html.vue"]]),h=JSON.parse('{"path":"/posts/web-security.html","title":"web应用安全概述","lang":"en-US","frontmatter":{"date":"2021-07-20T00:00:00.000Z","category":["技术分享"],"tag":["安全"]},"headers":[{"level":2,"title":"常见的攻击方式：","slug":"常见的攻击方式","link":"#常见的攻击方式","children":[]},{"level":2,"title":"核心的安全问题：","slug":"核心的安全问题","link":"#核心的安全问题","children":[]}],"git":{"updatedTime":1728706338000,"contributors":[{"name":"test","email":"long275@126.com","commits":1}]},"filePathRelative":"posts/web-security.md","excerpt":"\\n<h2>常见的攻击方式：</h2>\\n<p>1、破环权限，根据网站登录的漏洞，猜测弱密码，进行密码暴力破解，登录系统，或者绕过登录</p>\\n<p>2、SQL注入，通过前台输入的恶意sql数据，达到破坏网站数据库的目的</p>\\n<p>3、XSS攻击，通过前台的输入，在网站植入恶意脚本代码，获取其他用户的敏感数据或者执行某些非法操作。</p>\\n<p>4、CSRF攻击，冒充A用户在A网站的登录状态，在B网站上，发送执行A网站某敏感动作的请求。达到冒充身份的目的。</p>\\n<p>5、信息泄露，通过网站的一些错误处理功能，获取服务器的一些敏感信息。</p>\\n<h2>核心的安全问题：</h2>\\n<p>客户端是不安全的，用户可以任意输入提交数据。所以必须认为用户会输入恶意信息。</p>"}');export{i as comp,h as data};
